name: alertme api ci workflow

on:
  push:
    branches: [ "Initiate-code-for-backend-and-run-it-through-docker" ]
  pull_request:
    branches: [ "Initiate-code-for-backend-and-run-it-through-docker" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKERHUB_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Set up Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose jq

    - name: Extract Git commit SHA
      id: vars
      run: echo "GIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Build and tag Docker image
      run: |
        TAG=${{ env.GIT_SHA }}
        USERNAME=${{ secrets.DOCKER_USERNAME }}
        docker-compose build app
        IMAGE_ID=$(docker images $USERNAME/alertme-api --format "{{.ID}}" | head -n 1)
        docker tag $IMAGE_ID $USERNAME/alertme-api:$TAG
        docker tag $IMAGE_ID $USERNAME/alertme-api:latest

    - name: Create .env file
      run: |
        touch .env
        echo '${{ toJSON(secrets) }}' | jq -r 'keys[] as $k | "\($k)=\(.[$k])"' >> .env

    - name: Start the container
      run: docker-compose up -d app

    - name: Run tests
      run: docker-compose exec app python manage.py test

    - name: Push Docker images
      if: success()
      run: |
        TAG=${{ env.GIT_SHA }}
        USERNAME=${{ secrets.DOCKER_USERNAME }}
        docker push $USERNAME/alertme-api:$TAG
        docker push $USERNAME/alertme-api:latest
      env:
        TAG: ${{ env.GIT_SHA }}
