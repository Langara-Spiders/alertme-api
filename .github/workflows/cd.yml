name: alertme-api cd
    


on:
  push:
    branches: [ "110-add-make-migrations-command-to-cd-pipeline" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.ref }}
      
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKERHUB_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      
    - name: Pull Docker image
      run: docker pull langaraspiders/alertme-api:latest

    - name: Create .env file
      run: |
        echo '${{ toJSON(secrets) }}' | jq -r 'keys[] as $k | "\($k)=\(.[$k])"' > .env

    - name: Stop and remove existing container
      run: |
        docker stop alertme-api-container || true
        docker rm alertme-api-container || true

    name: Run Docker container
    run: |
      docker run -d --name alertme-api-container \
      -p 8000:8000 \
      --env-file .env \
      Langara-Spiders/alertme-api:latest \
      tail -f /dev/null
    working-directory: /home/ubuntu/actions-runner/_work/alertme-api/alertme-api

    - name: Run migrations and start server inside container
      run: |
        docker exec -d alertme-api-container sh -c \
        "python manage.py makemigrations && \
        python manage.py migrate && \
        python manage.py runserver 0.0.0.0:8000"

    - name: Wait for a few seconds to let the container start
      run: sleep 10

    - name: Print container logs for debugging
      run: docker logs alertme-api-container

    - name: Cleanup .env file
      run: rm .env
      
    - name: Show message on successful deployment
      if: success()
      run: echo "Success"
